---
import { Icon } from "astro-icon/components";
---

<button id="themeToggle">
    <Icon name="sun" />
    <Icon name="moon" />
</button>

<style lang="scss">
    #themeToggle {
        border: 0;
        background: none;
        color: rgb(var(--text-primary));
    }

    svg:hover {
        cursor: pointer;
    }

    [data-icon="sun"] {
        display: block;
    }

    [data-icon="moon"] {
        display: none;
    }

    :global(.dark) {
        [data-icon="sun"] {
            display: none;
        }

        [data-icon="moon"] {
            display: block;
        }
    }
</style>

<script is:inline>
    const disableAnimation = (callback) => {
        const css = document.createElement("style");
        css.textContent = `*,*::before,*::after{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}`;

        document.head.appendChild(css);

        setTimeout(() => {
            document.head.removeChild(css);
        }, 1);

        window.requestAnimationFrame(callback);
    };

    const getInitialTheme = (() => {
        if (
            typeof localStorage !== "undefined" &&
            localStorage.getItem("theme")
        ) {
            return localStorage.getItem("theme");
        }
        if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
            return "dark";
        }
        return "light"; // default
    })();

    const applyTheme = (theme) => {
        if (theme === "light") {
            document.documentElement.classList.remove("dark");
        } else {
            document.documentElement.classList.add("dark");
        }
    };

    const handleToggleClick = () => {
        const element = document.documentElement;
        element.classList.toggle("dark");

        const isDark = element.classList.contains("dark");
        localStorage.setItem("theme", isDark ? "dark" : "light");

        applyTheme(isDark ? "dark" : "light");

        disableAnimation(() => {
            // optional: additional actions after theme change
        });
    };

    applyTheme(getInitialTheme);

    document
        .getElementById("themeToggle")
        .addEventListener("click", handleToggleClick);
</script>
